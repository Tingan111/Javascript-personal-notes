for (var i = 0; i < 3; i++) {
    setTimeout(() => {
    console.log(i)
    })
    }

/*你的程式碼會印出 3 3 3 是因為 setTimeout 的回呼函數在 JavaScript 中是非同步執行的，而 var 宣告的變數具有函式作用域。以下是詳細的解釋：

1. var 的作用域
在你的程式碼中，var i 是一個函式作用域的變數。
這表示整個 for 迴圈內的 i 是共享的（只有一個 i），而且它的值會隨著迴圈進行而改變。
2. 非同步的 setTimeout
setTimeout 的回呼函數會在指定的時間後執行（預設為 0 毫秒延遲）。
然而，這些回呼函數不會立即執行，而是被推送到事件佇列（event queue）中。
在事件佇列中的函數執行時，主執行緒已經完成了當前的程式執行。